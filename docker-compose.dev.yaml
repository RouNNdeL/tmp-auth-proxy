services:
  traefik-proxy:
    build:
      context: .
      dockerfile: dev.Dockerfile
      args:
        PLUGIN_MODULE: ${PLUGIN_MODULE}
    restart: unless-stopped
    networks:
      - traefik-module-test
    command:
      #- "--log.level=DEBUG"
    - "--providers.docker=true"
    - "--providers.docker.exposedbydefault=false"
    - "--providers.docker.network=traefik-module-test"
    ## Entrypoints:
    - "--entrypoints.web.address=:80"
    - "--entrypoints.traefik.address=:9000"
    - "--api.dashboard=true"
    - "--api.insecure=true"
    ## Enable local plugins:
    - "--experimental.localPlugins.auth.moduleName=${PLUGIN_MODULE}"
    ports:
    - "80:80"
    - "127.0.0.1:9000:9000"
    volumes:
    - "/var/run/docker.sock:/var/run/docker.sock:ro"

  ## The whoami container will run the demo plugin for testing purposes:
  whoami:
    image: traefik/whoami
    restart: unless-stopped
    networks:
      - traefik-module-test
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`${WHOAMI_TRAEFIK_HOST}`)"
      - "traefik.http.routers.whoami.entrypoints=web"
      - "traefik.http.routers.whoami.middlewares=whoami-auth"
      # Add a test header to all incoming requests:
      # (the presense of this header in whoami response shows if the plugin works:)
      - "traefik.http.middlewares.whoami-auth.plugin.auth.secret=test-secret"
networks:
  traefik-module-test:
